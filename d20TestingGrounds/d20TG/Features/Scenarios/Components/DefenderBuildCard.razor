@using d20TG.Features.Scenarios.State
@using System.Linq.Expressions
@using d20TG.Features.Scenarios.Model
@inject IMyNavigationManager MyNavigation

<div class="max-w-sm p-6 bg-white border border-gray-200 rounded-lg shadow">
    <div class="grid gap-6 mb-6 md:grid-cols-1">
        <p class="border" style="border-color: @DefenderBuild.ColorHex">@DefenderBuild.Label</p>
        <h6 class="text-lg">Hit Points</h6>
        <p>@DefenderBuild.HitPoints</p>
        <h6 class="text-lg">Armor Class</h6>
        <p>@DefenderBuild.ArmorClass</p>
        @if (OnDeleteClickCallback.HasDelegate)
        {
            <button @onclick="@(async () => await OnDeleteClickCallback.InvokeAsync(DefenderBuild.Id))"
                    class="focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 flex flex-row justify-center">
                <i>
                    <svg class="w-6 h-6" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 20">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5h16M7 8v8m4-8v8M7 1h4a1 1 0 0 1 1 1v3H6V2a1 1 0 0 1 1-1ZM3 5h12v13a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V5Z"/>
                    </svg>
                </i>
            </button>
        }
    </div>
    <button @onclick="HandleEditClick"
            class="focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 flex flex-row justify-center">
        Edit
    </button>
</div>

@code {

    [Parameter, EditorRequired]
    public string ScenarioId { get; set; } = null!;
    
    [Parameter, EditorRequired]
    public DefenderBuildState DefenderBuild { get; set; }

    [Parameter]
    public EventCallback<string> OnDeleteClickCallback { get; set; }

    private void HandleEditClick()
    {
        MyNavigation.NavigateToAttacker(ScenarioId, DefenderBuild.Id);
    }

}