@using d20TG.Features.Scenarios.State
@using d20TG.Features.Scenarios.Model

@if (AttackerBuilds != null)
{
    <div class="flex flex-row gap-2 overflow-x-auto snap-x">
        @foreach (var build in AttackerBuilds)
        {
            <div class="snap-center flex-shrink-0">
                @if (build.Id == Scenario.FirstAttackerId)
                {
                    <AttackerBuildCard ScenarioId="@ScenarioId" 
                                       AttackerBuild="@build" />
                }
                else
                {
                    <AttackerBuildCard ScenarioId="@ScenarioId" 
                                       AttackerBuild="@build" 
                                       OnDeleteClickCallback="@OnAttackerDeleteClickCallback"/>
                }
            </div>
        }
    </div>
}

@code {

    [Parameter, EditorRequired]
    public string ScenarioId { get; set; } = null!;
    
    [Parameter, EditorRequired]
    public AttackerBuildState[]? AttackerBuilds { get; set; }

    [Parameter, EditorRequired]
    public EventCallback<string> OnAttackerDeleteClickCallback { get; set; }

}