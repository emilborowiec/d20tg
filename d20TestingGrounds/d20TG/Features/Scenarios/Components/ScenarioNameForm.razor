@using d20TG.Features.Scenarios.Model

<EditForm Model="_model" OnValidSubmit="HandleValidSubmitAsync">
    <div class="flex flex-row items-center">
        <InputText @bind-Value="_model.Name"
                   class="bg-gray-50 border border-gray-300 text-gray-900 text-2xl rounded-lg focus:ring-blue-500 focus:border-blue-500 block p-2.5 w-full"/>
        <button type="submit"
                class="text-blue-700 hover:bg-blue-700 hover:text-white focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium text-sm p-2.5 text-center inline-flex items-center rounded-lg ml-2">
            <svg class="w-6 h-6" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 12">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5.917 5.724 10.5 15 1.5"/>
            </svg>
            <span class="sr-only">Ok icon</span>
        </button>
        <button type="button"
                @onclick="@(async () => await OnCancel.InvokeAsync())"
                class="text-blue-700 hover:bg-blue-700 hover:text-white focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium text-sm p-2.5 text-center inline-flex items-center rounded-lg ml-2">
            <svg class="w-6 h-6" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                <path stroke="red" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
            </svg>
            <span class="sr-only">Cancel icon</span>
        </button>
    </div>

    <DataAnnotationsValidator/>
    <ValidationSummary/>
</EditForm>

@code {
    private ScenarioNameFormModel _model = new();

    [Parameter]
    public string? InitialName { get; set; }

    [Parameter]
    public EventCallback<string> OnSave { get; set; }

    [Parameter]
    public EventCallback OnCancel { get; set; }

    protected override void OnParametersSet()
    {
        _model.Name = InitialName ?? "Scenario Name";
    }

    private async Task HandleValidSubmitAsync()
    {
        await OnSave.InvokeAsync(_model.Name);
    }

}