@using d20TG.Features.ScenarioSetup.State
@using d20TG.Features.ScenarioSetup.Services
@inject ICombatScenarioService ScenarioService

<h3>AttackerBuild</h3>

@if (State != null)
{
    <label>
        Attack Bonus
        <input type="number" min="-100" max="100" value="@State.attackBonus" @onchange="AttackBonusChangeCallback" />
    </label>
    <label>
        Damage Bonus
        <input type="number" min="0" max="100" value="@State.damageBonus" @onchange="DamageBonusChangeCallback" />
    </label>
    <DamageDice State="State.damageDiceState" />
}
else
{
    <p>No state provided!</p>
}

@code {
    [Parameter, EditorRequired]
    public AttackerBuildState? State { get; set; }

    private void AttackBonusChangeCallback(ChangeEventArgs eventArgs)
    {
        ScenarioService.SetAttackBonus((int)(eventArgs.Value ?? 0));
    }

    private void DamageBonusChangeCallback(ChangeEventArgs eventArgs)
    {
        ScenarioService.SetDamageBonus((int)(eventArgs.Value ?? 0));
    }

}